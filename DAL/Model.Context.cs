//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Linq;
    using Entities;
    
    public partial class DBContext : DbContext
    {
        public DBContext()
            : base("name=DBContext")
        {
    	var x = typeof(System.Data.Entity.SqlServer.SqlProviderServices);
    	this.Configuration.ProxyCreationEnabled = false;
        ((IObjectContextAdapter)this).ObjectContext.ObjectMaterialized +=
            (sender, e) => Apply(e.Entity);
    
        }
    
    	private void Apply(object entity)
            {
                if (entity == null)
                    return;
    
                var properties = entity.GetType().GetProperties()
                    .Where(x => x.PropertyType == typeof(DateTime) || x.PropertyType == typeof(DateTime?));
    
                foreach (var property in properties)
                {
                    var dt = property.PropertyType == typeof(DateTime?)
                        ? (DateTime?)property.GetValue(entity)
                        : (DateTime)property.GetValue(entity);
    
                    if (dt == null)
                        continue;
                    property.SetValue(entity, DateTime.SpecifyKind(dt.Value, DateTimeKind.Local));
                }
            }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<User> Users { get; set; }
    }
}
